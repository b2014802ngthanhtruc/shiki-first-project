//******** AUTO GENERATED FILE, DO NOT EDIT.  *********

generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CartItem {
  userId    String @map("user_id") @db.VarChar(36)
  productId String @map("product_id") @db.VarChar(36)
  quantity  Int

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@id([userId, productId])
  @@map("cart-items")
}

model Category {
  id       String  @id @default(uuid()) @db.VarChar(36)
  name     String  @db.VarChar(255)
  parentId String? @db.VarChar(36)
  level    Int     @default(1)

  parent          Category?  @relation("CategoryParent", fields: [parentId], references: [id])
  childCategories Category[] @relation("CategoryParent")
  product         Product[]  @relation("ProductOfCategory")

  createAt DateTime  @default(now()) @map("create_at") @db.Timestamptz(3)
  updateAt DateTime? @map("update_at") @db.Timestamptz(3)

  @@map("categories")
}

model OrderDetail {
  orderId   String @map("order_id") @db.VarChar(36)
  productId String @map("product_id") @db.VarChar(36)

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  producName      String @map("product_name") @db.VarChar(255)
  productPrice    String @map("product_price") @db.VarChar(255)
  productQuantity String @map("product_quantity") @db.VarChar(255)

  @@id([orderId, productId])
  @@map("order_details")
}

model Order {
  id String @id @default(uuid()) @db.VarChar(36)

  // TODO có nên bỏ user id không
  user            User   @relation(fields: [userId], references: [id])
  userId          String @map("user_id") @db.VarChar(36)
  paymentMethod   String @map("payment_method") @db.VarChar(100)
  shippingAddress String @map("shipping_address") @db.VarChar(255)
  shippingMethod  String @map("shipping_method") @db.VarChar(100)
  phone           String @db.VarChar(10)
  status          String @db.VarChar(30)
  total           Float
  note            String @db.VarChar(255)

  orderDetails   OrderDetail[]
  trackingOrders TrackingOrder[]

  @@map("orders")
}

model Product {
  id          String   @id @default(uuid()) @db.VarChar(36)
  name        String   @db.VarChar(255)
  price       Float
  quantity    Int
  sold        Int
  description String
  categoryId  String   @db.VarChar(255)
  categories  String[]

  category    Category?     @relation("ProductOfCategory", fields: [categoryId], references: [id])
  cartItme    CartItem[]
  orderDetail OrderDetail[]

  createAt DateTime  @default(now()) @map("create_at") @db.Timestamptz(3)
  updateAt DateTime? @map("update_at") @db.Timestamptz(3)
  deleteAt DateTime? @map("delete_at") @db.Timestamptz(3)

  @@map("products")
}

model Seed {
  id        String   @id @default(uuid()) @db.VarChar(36)
  key       String   @unique @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(3)

  @@map("seeds")
}

model TrackingOrder {
  // TODO có nên bỏ user id không
  userId  String @map("user_id") @db.VarChar(36)
  orderId String @map("order_id") @db.VarChar(36)
  user    User   @relation(fields: [userId], references: [id])
  order   Order  @relation(fields: [orderId], references: [id])

  status    String   @db.VarChar(20) // status : chờ xác nhận if( status === xác nhận) {hủy nếu muốn} => xác nhận => đang giao hàng => đã nhận hàng 
  // <=> tùy tâm trạng admin sản phẩm có thể lổi
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz(3)

  @@id([orderId, status])
  @@map("tracking_orders")
}

model User {
  id          String  @id @default(uuid()) @db.VarChar(36)
  email       String  @db.VarChar(255)
  password    String  @db.VarChar(255)
  firstName   String  @map("first_name") @db.VarChar(255)
  lastName    String? @map("last_name") @db.VarChar(255)
  adminStatus String  @db.VarChar(255)
  userStatus  String  @db.VarChar(255)
  salerStatus String  @db.VarChar(255)
  isAdmin     Boolean @default(false) @map("is_admin") @db.Boolean
  isUser      Boolean @default(false) @map("is_user") @db.Boolean
  isSaler     Boolean @default(false) @map("is_saler") @db.Boolean

  resetCode String?   @db.VarChar(255)
  expireAt  DateTime? @db.Timestamptz(3)

  cartItem       CartItem[]
  orders         Order[]
  trackingOrders TrackingOrder[]

  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(3)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)

  @@map("users")
}
